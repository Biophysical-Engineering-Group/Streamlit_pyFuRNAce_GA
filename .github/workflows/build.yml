name: Weekly patched Streamlit wheel

on:
  schedule:
    # Every Monday at 03:30 UTC
    - cron: "30 3 * * 1"
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install build deps
        run: |
          python -m pip install --upgrade pip
          pip install wheel

      - name: Download latest Streamlit wheel (only the package itself)
        run: |
          rm -f *.whl || true
          pip download --no-deps --only-binary=:all: streamlit
          echo "Wheel(s) downloaded:"
          ls -1 streamlit-*.whl

      - name: Unpack just that wheel
        run: |
          WHEEL=$(echo streamlit-*.whl)
          python -m wheel unpack "$WHEEL"

      - name: Remove original wheel
        run: |
          rm -f streamlit-*.whl

      - name: Patch index.html with GA snippet
        run: |
          python scripts/patch_streamlit.py

      - name: Repack
        run: |
          DIR=$(echo streamlit-*)
          python -m wheel pack "$DIR"
          echo "Repacked:"
          ls -1 *.whl

      - name: Make filename predictable (+ga suffix) and export name
        run: |
          set -e
          WHEEL=$(ls -1 *.whl | head -n1)
          case "$WHEEL" in
            *+ga.whl) true ;;
            *) BASE="${WHEEL%.whl}"; mv "$WHEEL" "${BASE}+ga.whl" ;;
          esac
          WHEEL=$(ls -1 *.whl | head -n1)
          echo "Final wheel: $WHEEL"
          # Export the wheel name for later steps
          echo "WHEEL=$WHEEL" >> "$GITHUB_ENV"

      - name: Write latest.txt (PEP 508 direct reference)
        run: |
          echo "streamlit @ https://raw.githubusercontent.com/Biophysical-Engineering-Group/Streamlit_pyFuRNAce_GA/main/$WHEEL" > latest.txt
          echo "latest.txt ->"
          cat latest.txt

      - name: Cleanup build artifacts (optional)
        run: |
          rm -rf streamlit-*

      # Keep only .github/, scripts/, README.md, the wheel, and latest.txt in the repo
      - name: Clean repo to only keep the wheel and essential files
        run: |
          set -euo pipefail
          shopt -s extglob nullglob
          rm -rf !(.git|.github|scripts|README.md|*.whl|latest.txt)
          shopt -u extglob nullglob

      - name: Commit & push wheel and latest.txt if changed
        run: |
          set -e
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add -A
          if git diff --cached --quiet; then
            echo "No changes to commit."
          else
            git commit -m "Weekly: update ${WHEEL} and latest.txt"
            git push
          fi

      - name: Create/update 'latest' release with assets (wheel + latest.txt)
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -e
          TAG="latest"
          # Ensure release exists
          gh release view "$TAG" >/dev/null 2>&1 || gh release create "$TAG" -t "Latest patched wheel" -n "Automated weekly build."
          # Upload/replace assets using the recorded wheel name
          for ASSET in "$WHEEL" latest.txt; do
            if gh release view "$TAG" --json assets -q ".assets[].name" | grep -Fx "$ASSET" >/dev/null 2>&1; then
              gh release delete-asset "$TAG" "$ASSET" -y
            fi
            gh release upload "$TAG" "$ASSET" --clobber
          done
